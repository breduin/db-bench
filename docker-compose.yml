services:
  redis:
    image: redis:latest
    container_name: test-redis
    restart: on-failure
    ports:
      - "6379:6379"
    logging:
      options:
        max-size: 10m
    healthcheck:
      test: ['CMD', 'redis-server', '-v']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  scylla:
    container_name: test-scylla
    image: scylladb/scylla:latest
    restart: on-failure
    ports:
      - '9042:9042'
    healthcheck:
      test: ['CMD', 'nodetool', 'status']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging:
      options:
        max-size: 10m

  garnet:
    image: 'ghcr.io/microsoft/garnet'
    container_name: test-garnet
    ulimits:
      memlock: -1
    ports:
      - "16379:6379"
    restart: always
    healthcheck:
      test: ['CMD', 'redis-cli', '-h', 'localhost', '-p', '16379', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  clickhouse:
    image: yandex/clickhouse-server:latest
    container_name: test-clickhouse
    ports:
      - "8123:8123"  # HTTP интерфейс
      - "9000:9000"  # TCP интерфейс
      - "9009:9009"  # Inter-server replication
    environment:
      - CLICKHOUSE_DB=default
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
    restart: always
    healthcheck:
      test: ['CMD', 'clickhouse-client', '--query', 'SELECT 1']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  keydb:
    image: eqalpha/keydb:latest
    container_name: test-keydb
    ports:
      - "6378:6379"
    restart: always
    healthcheck:
      test: ['CMD', 'keydb-server', '-v']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  postgresql:
    image: postgres:latest
    container_name: test-postgresql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  mongo:
    image: mongo:latest
    container_name: test-mongo
    ports:
      - "27017:27017"
    restart: always
    healthcheck:
      test: ['CMD', 'mongo', '--eval', 'db.stats()']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  mariadb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test
    ports:
      - "3306:3306"
